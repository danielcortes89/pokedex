{"version":3,"sources":["components/PokeSpriteComponent.js","components/HomeComponent.js","components/FavoritesComponent.js","components/SinglePokemonComponent.js","components/HeaderComponent.js","App.js","reportWebVitals.js","index.js"],"names":["PokeSpriteComponent","props","useState","pokeSprite","setPokeSprite","getSprite","a","axios","get","name","res","data","sprites","front_default","console","log","useEffect","to","className","src","alt","HomeComponent","pokemon","handleChange","resetSearch","onSubmit","type","onChange","placeholder","value","map","poke","index","withRouter","favorites","favorite","singlePokemon","setSinglePokemon","abilities","setPokemonAbilities","height","setPokemonHeight","baseStats","setPokemonStats","types","setPokemonTypes","isFavorite","setfavorites","match","params","stats","filter","length","toggleFavorite","history","push","ability","id","onClick","stat","base_stat","HeaderComponent","App","kantoDex","setKantoDex","search","setSearch","e","target","newState","current","includes","newFavorites","localStorage","setItem","getKanto","results","prep","JSON","stringify","favs","getItem","update","parse","getFavorites","path","render","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c71aab36.chunk.js","sourcesContent":["import React, { useState, useEffect }  from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\n\nconst PokeSpriteComponent = (props) => {\n    const [pokeSprite, setPokeSprite] =  useState('blank')\n\n    const getSprite = async () => {\n        try {\n            const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${props.name}/`)\n            // console.log(res.data.id)\n\n\n            setPokeSprite(res.data.sprites.front_default)\n        } catch (error) {\n            console.log(error)\n            return null\n        }\n    }\n\n    useEffect(() => {\n        getSprite()\n    })\n    return (\n        <Link to={`/single/${props.name}`} className=\"poke-sprite\" className=\"col-11 col-md-4 col-lg-3 p-1 flex justify-content-center align-items-center\">\n            <p className=\"text-center m-0\">{props.name}</p>\n            {pokeSprite !== 'blank' &&\n            <img src={pokeSprite} alt=\"Sprite of pokemon\" className=\"poke-sprite-img\"/>\n            }\n        </Link>\n    )\n}\n\nexport default PokeSpriteComponent","import React, { Component } from 'react'\nimport Sprite from './PokeSpriteComponent'\n\nconst HomeComponent = (props) => {\n    \n        const { pokemon, handleChange, resetSearch } = props\n        if(pokemon){\n            return (\n                <div className=\"container\">\n                    <h2 className=\"text-center\">Home</h2>\n                    <div className=\"my-2\">\n                        <form onSubmit={resetSearch} className=\"search\">\n                            <input \n                                type=\"text\"\n                                onChange={handleChange}\n                                placeholder=\"Search\"/>\n                            <button \n                                type=\"submit\"\n                                value=\"Reset\"\n                                >Reset</button>\n                        </form>\n                    </div>\n                    <div className=\"poke-field row\">\n                        {pokemon.map((poke, index) => {\n                            return <Sprite name={poke.name} key={index}/>\n                        })}\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <h3>Pokemon failed to load</h3>\n                </div>\n            )\n        }\n}\n\nexport default HomeComponent","import React, { Component } from 'react'\nimport Sprite from './PokeSpriteComponent'\nimport { withRouter } from 'react-router-dom'\n\nconst FavoritesComponent = (props) => {\n    const { favorites } = props\n    if(favorites){\n        return (\n            <div className=\"container\">\n                <h2>Favorites</h2>\n                <div className=\"poke-field row\">\n                {favorites.map((favorite, index) =>{\n                    return <Sprite name={favorite} key={index}/>\n                })}\n                </div>\n            </div>\n        )\n    } else {\n        return <div>\n            <h2>No favorites</h2>\n        </div>\n    }\n}\n\nexport default withRouter(FavoritesComponent)","import React, { useState, useEffect }  from 'react'\nimport { withRouter, Redirect } from 'react-router-dom'\nimport axios from 'axios'\n\nconst SinglePokemonComponent = (props) => {\n    const [singlePokemon, setSinglePokemon] =  useState(\"\")\n    const [abilities, setPokemonAbilities] =  useState([])\n    const [height, setPokemonHeight] =  useState(0)\n    const [baseStats, setPokemonStats] =  useState([])\n    const [types, setPokemonTypes] =  useState([])\n    const [pokeSprite, setPokeSprite] =  useState('blank')\n    const [isFavorite, setfavorites] = useState(false)\n    // let pokemon = ''\n   \n    const getSprite = async () => {\n        \n        try {\n            // let { pokemon } = useParams()\n            const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${props.match.params.pokemon}/`)\n            console.log(res.data)\n            \n            setSinglePokemon(res.data.name)\n            setPokemonAbilities(res.data.abilities)\n            setPokemonHeight(res.data.height)\n            setPokemonStats(res.data.stats)\n            setPokemonTypes(res.data.types)\n            setPokeSprite(res.data.sprites.front_default)\n\n            const favCheck = props.favorites.filter(favorite => {\n                return res.data.name === favorite\n            })\n\n            if(favCheck.length > 0){\n                setfavorites(true)\n            }\n        } catch (error) {\n            console.log(error)\n            return null\n        }\n    }\n\n    useEffect(() => {\n        getSprite()\n    }, {})\n\n    const toggleFavorite = (name) => {\n        props.toggleFavorite(name)\n        props.history.push('/home')\n    }\n\n    if(singlePokemon){\n        return (\n            <div className=\"container\">\n                <div className=\"dex-body \">\n                    <div className=\"row d-flex justify-content-between\">\n                        {/* READOUT */}\n                        <div className=\"col-12 col-md-5 info-body d-flex flex-column justify-content-between p-2\">\n\n                            <div className=\"d-flex flex-column flex-md-row align-items-center justify-content-between\">\n                                <h2 className=\"no-marg\">{props.match.params.pokemon}</h2>\n                                <p className=\"no-marg\">Height: {height}'</p>\n                            </div>\n\n                            <div>\n                                <span>Types:</span>\n                                <div className=\"row\">\n                                    {types.map((type, index) => {\n                                        return (\n                                            <span key={index} className=\"col-12 col-md-6 text-center\">\n                                                <div className={type.type.name}>{type.type.name}</div>\n                                            </span>\n                                        )\n                                    })}\n                                </div>\n                            </div>\n\n                            <div>\n                                <span>Abilities:</span>\n                                <div className=\"row\">\n                                    {abilities.map((ability, index) => {\n                                        return (\n                                            <span key={index} className=\"col-12 col-md-6 text-center\">\n                                                <div className=\"dark\">{ability.ability.name}</div>\n                                            </span>\n                                        )\n                                    })}\n                                </div>\n                            </div> \n\n                            {isFavorite &&\n                                <div className=\"text-center\">\n                                    <span>This is one of your favorites.</span>\n                                    <button className=\"butn\" id=\"btn2\" onClick={() => toggleFavorite(singlePokemon)}>Remove?</button>\n                                </div>\n                            }    \n                            {!isFavorite &&\n                                <div className=\"text-center\">\n                                    <button className=\"butn\" id=\"btn2\" onClick={() => toggleFavorite(singlePokemon)}>Add To Favorites?</button>\n                                </div>\n                            } \n\n                        </div>\n\n                        {/* IMAGE */}\n                        <div className=\"img-wrapper col-12 col-md-5\">\n                            <div className=\"img-field\">\n                                <img src={pokeSprite} alt=\"Sprite of Pokemon\"/>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div className=\"stats mt-3\">\n                        <table >\n                            <tr className=\"row text-center\">\n                                {baseStats.map(stat => {\n                                    return (\n                                        <th className=\"col-2\">{stat.stat.name}</th>\n                                    )\n                                })}\n                            </tr>\n                            <tr className=\"row text-center\">\n                                {baseStats.map(stat => {\n                                    return (\n                                        <th className=\"col-2\">{stat.base_stat}</th>\n                                    )\n                                })}\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h2>No result</h2>\n            </div>\n        )\n    }\n    \n}\n\n\nexport default withRouter(SinglePokemonComponent)\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst HeaderComponent = () => {\n    return (\n        <div className=\"header\">\n            <span>\n                <Link to=\"/home\" className=\"mr-3\">Kanto</Link>\n            </span>\n            <span>\n                <Link to=\"/favorites\">Favorites</Link>\n            </span>\n        </div>\n    )\n}\n\nexport default HeaderComponent;","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n\nimport axios from 'axios'\n\nimport Home from './components/HomeComponent'\nimport Favorites from './components/FavoritesComponent'\nimport Single from './components/SinglePokemonComponent'\nimport Header from './components/HeaderComponent'\n\nimport './App.css';\n\nconst App = () => {\n  const [kantoDex, setKantoDex] =  useState([])\n  const [favorites, setfavorites] =  useState([])\n  const [search, setSearch] = useState([])\n\n  const handleChange = (e) => {\n    const search = e.target.value\n    const currentState = kantoDex\n    \n    const newState = currentState.filter(current => {\n        return current.name.includes(search)\n    })\n\n    setSearch(newState)\n  }\n\n  const resetSearch = (e) => {\n    // e.preventDefault()\n    resetSearch(kantoDex)\n  }\n\n  const toggleFavorite = (name) => {\n    // console.log( typeof name)\n    if(favorites.includes(name)){\n      const newFavorites = favorites.filter(favorite => favorite !== name)\n      setfavorites(newFavorites)\n      localStorage.setItem(\"favorites\", newFavorites)\n    } else {\n      const newFavorites = favorites\n      newFavorites.push(name)\n      console.log(newFavorites)\n      setfavorites(newFavorites)\n      localStorage.setItem(\"favorites\", newFavorites)\n    }\n    \n  }\n  \n  const getKanto = async () => {\n\n    try {\n        const res = await axios.get('https://pokeapi.co/api/v2/pokemon/?limit=150')\n        \n        setKantoDex(res.data.results)\n        setSearch(res.data.results)\n    } catch (error) {\n        console.log(error)\n        return null\n    }\n  }\n\n  const getFavorites = () => {\n    let toStore = [\"ivysaur\", \"squirtle\"]\n    let prep = JSON.stringify(toStore)\n\n    localStorage.setItem(\"favorites\", prep)\n\n\n    const favs = localStorage.getItem(\"favorites\")\n    const update = JSON.parse(favs) \n    setfavorites(update)\n  }\n\n  useEffect(() => {\n    getKanto()    \n    getFavorites()\n  }, [])\n  \n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/Home\" render={() => <Home pokemon={search} handleChange={handleChange} resetSearch={resetSearch}/>}/>\n          <Route exact path=\"/favorites\" render={() => <Favorites favorites={favorites}/>}/>\n          <Route path=\"/single/:pokemon\" render={() => <Single favorites={favorites} toggleFavorite={toggleFavorite}/>} />\n          <Redirect to=\"/home\"/>\n        </Switch>\n      </Router>\n    </div>\n  );  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}